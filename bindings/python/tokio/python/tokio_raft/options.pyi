from datetime import timedelta
from os import PathLike

class Options:
  @property
  def heartbeat_timeout(self) -> timedelta:...
  
  @heartbeat_timeout.setter
  def heartbeat_timeout(self, value: timedelta) -> None:...

  @property
  def election_timeout(self) -> timedelta:...
  
  @election_timeout.setter
  def election_timeout(self, value: timedelta) -> None:...

  @property
  def commit_timeout(self) -> timedelta:...
  
  @commit_timeout.setter
  def commit_timeout(self, value: timedelta) -> None:...
  
  @property
  def max_append_entries(self) -> int:...
  
  @max_append_entries.setter
  def max_append_entries(self, value: int) -> None:...
  
  @property
  def batch_apply(self) -> bool:...
  
  @batch_apply.setter
  def batch_apply(self, value: bool) -> None:...
  
  @property
  def shutdown_on_remove(self) -> bool:...
  
  @shutdown_on_remove.setter
  def shutdown_on_remove(self, value: bool) -> None:...
  
  @property
  def trailing_logs(self) -> int:...
  
  @trailing_logs.setter
  def trailing_logs(self, value: int) -> None:...
  
  @property
  def snapshot_interval(self) -> timedelta:...
  
  @snapshot_interval.setter
  def snapshot_interval(self, value: timedelta) -> None:...
  
  @property
  def snapshot_threshold(self) -> int:...
  
  @snapshot_threshold.setter
  def snapshot_threshold(self, value: int) -> None:...
  
  @property
  def leader_lease_timeout(self) -> timedelta:...
  
  @leader_lease_timeout.setter
  def leader_lease_timeout(self, value: timedelta) -> None:...
  
  @property
  def no_snapshot_restore_on_start(self) -> bool:...
  
  @no_snapshot_restore_on_start.setter
  def no_snapshot_restore_on_start(self, value: bool) -> None:...

class ReloadableOptions:
  @property
  def heartbeat_timeout(self) -> timedelta:...

  @heartbeat_timeout.setter
  def heartbeat_timeout(self, value: timedelta) -> None:...

  @property
  def election_timeout(self) -> timedelta:...

  @election_timeout.setter
  def election_timeout(self, value: timedelta) -> None:...

  @property
  def trailing_logs(self) -> int:...

  @trailing_logs.setter
  def trailing_logs(self, value: int) -> None:...

  @property
  def snapshot_interval(self) -> timedelta:...

  @snapshot_interval.setter
  def snapshot_interval(self, value: timedelta) -> None:...

  @property
  def snapshot_threshold(self) -> int:...

  @snapshot_threshold.setter
  def snapshot_threshold(self, value: int) -> None:...


class SnapshotVersion:
  def v1() -> SnapshotVersion:...

class ProtocolVersion:
  def new() -> ProtocolVersion:...

  def v1() -> ProtocolVersion:...

class SnapshotStorageOptions:
  def file(opts: FileSnapshotStorageOptions) -> SnapshotStorageOptions:...
  
  def memory() -> SnapshotStorageOptions:...

class FileSnapshotStorageOptions:
  def __init__(self, base: PathLike, retain: int) -> None: ...

  @property
  def base(self) -> str:...

  @property
  def retain(self) -> int:...
