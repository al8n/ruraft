[package]
name = "ruraft"
version = { workspace = true } 
edition = { workspace = true }
license = { workspace = true }
description = "A placeholder"

[features]
default = ["dns"]

tokio = ["agnostic/tokio"]
async-std = ["agnostic/async-std"]
smol = ["agnostic/smol"]

# enable DNS node address resolver
dns = ["trust-dns-resolver", "trust-dns-proto", "idna", "agnostic/dns"]

# enable DNS node address resolver with WASI support
dns-wasi = ["resolv-conf", "trust-dns-resolver", "trust-dns-proto", "idna", "agnostic/dns"]

metrics = ["ruraft-core/metrics"]

test = ["ruraft-core/test", "tempfile"]

# enable rmp encoder/decoder for the network transport
rmp = ["dep:rmp-serde"]

[target.'cfg(not(target_family = "wasm"))'.dependencies]
trust-dns-resolver = { version = "0.23", default-features = false, optional = true, features = ["system-config"] }

[target.'cfg(target_family = "wasm")'.dependencies]
trust-dns-resolver = { version = "0.23", default-features = false, optional = true }
getrandom = { version = "0.2", features = ["js"] }

[dependencies]
agnostic = { workspace = true }
async-channel = { workspace = true }
async-lock = { workspace = true }
async-trait = { workspace = true }
bytes = { workspace = true }
crc32fast = "1.3"
crossbeam-skiplist = "0.1"
futures = { workspace = true }
once_cell = "1.18"
ruraft-core = { path = "../core" }
rand = "0.8"
scopeguard = "1.1"
serde_json = "1"
smol_str = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
viewit = { workspace = true }

# dns related dependencies
resolv-conf = { version = "0.7", default-features = false, optional = true }
trust-dns-proto = { version = "0.23", default-features = false, optional = true }
idna = { version = "0.4", optional = true }

# encoder/decoder related dependencies
rmp-serde = { version = "1.1", optional = true }

# test features related dependencies
tempfile = { version = "3", optional = true }